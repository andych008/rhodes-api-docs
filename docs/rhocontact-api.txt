# RhoContact API

Access a Device Contacts

Provides access to a device's phone book and contacts.

## Properties

The contact properties are stored in a hash.

<table border="1">
<tr>
	<td><code>id</code></td>
	<td>id for this event.</td>
</tr>
<tr>
	<td><code>title</code></td>
	<td>String. The event title.</td>
</tr>
<tr>
	<td><code>location</code></td>
	<td>String. The event location.</td>
</tr>
<tr>
	<td><code>notes</code></td>
	<td>String. Notes added to this event.</td>
</tr>
<tr>
	<td><code>start_date</code></td>
	<td>Start date for this event in Time.utc format.</td>
</tr>
<tr>
	<td><code>end_date</code></td>
	<td>End date for this event in Time.utc format.</td>
</tr>
<tr>
	<td><code>reminder</code></td>
	<td>(Blackberry and Windows only) int. event reminder in minutes.</td>
</tr>
<tr>
	<td><code>privacy</code></td>
	<td>(Blackberry and Windows only) 'public', 'private', or 'confidential'.</td>
</tr>
<tr>
	<td><code>canceled</code></td>
	<td>(iPhone and Android only).</td>
</tr>
<tr>
	<td><code>oragnizer</code></td>
	<td>(iPhone and Android only) String. The event organizer.</td>
</tr>
<tr>
	<td><code>attendees</code></td>
	<td>(iPhone and Android only) String. The attendees.</td>
</tr>
<tr>
	<td><code>last_modified</code></td>
	<td>(iPhone and Android only) Datetime when the event was last modified.</td>
</tr>
</table>

Recurrence properties: “recurrence”, “frequency”(‘daily’, ‘weekly’, ‘monthly’, ‘yearly’), “interval”, “end_date” , “days”(array of 7 items, 1 – means event is triggered – Mon-Sun), “months” ( array of 12 items, Jan-Dec), “weeks”(array of 5 items, first-fifth ), “count”(how many occurrences), “day_of_month”(1..31)

## find

Returns the contacts in the device phone book.

	:::ruby
	find(contacts)

<table border="1">
<tr>
	<td><code>contacts</code></td>
	<td>:all - Return a hash of hashes of all the contacts. @params['id'] - return a hash of the properties of the contact identified by this id.</td>
</tr>
</table>

## create!

Create a new contact in the phonebook, setting its properties passed as a parameter hash.

	:::ruby
	create!(@params['contact'])

<table border="1">
<tr>
	<td><code>contact</code></td>
	<td>A hash containing the contact properties.</td>
</tr>
</table>

## destroy

Delete this contact from the phonebook.

	:::ruby
	delete(@params['id'])

<table border="1">
<tr>
	<td><code>id</code></td>
	<td>Delete the contact identified by this id</td>
</tr>
</table>

## update_attributes

Create a new contact in the phonebook, setting its properties passed as a parameter hash.

	:::ruby
	update_attributes(@params['contact'])

<table border="1">
<tr>
	<td><code>contact</code></td>
	<td>A hash containing the contact properties to change for this contact.</td>
</tr>
</table>
