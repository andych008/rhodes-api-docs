# Alert API

Call system alert methods for popup, vibrate, or playing audio files.

## hide_popup

Closes the current popup window.

## play_file

Play the file if the media type is supported by the phone. The file must in the application; for example, /apps/public/test-file.mp3.

	:::ruby
	play_file(filename.ext, media_type)

 * `file_name.ext` - The path to the file name, ending in the file name and extension.  
 * `media_type` - Media type can be specified explicitly, or can be recognized from the file extension. Known file extensions: .mp3 – audio/mpeg; .wav – audio/x-wav

## show_popup

Bring the application up front and show a popup message.

Syntax: show_popup(popup_message)

popup_message - a text string or a hash of the following form:

:message – text displayed in the popup window.  
:title – title of the popup window.  
:icon – path to an image, or :alert for ! icon, :question for ? icon, :info for information icon.  
:buttons – array of buttons defined by id and title. Specify either by hash with :id and :title keys, or by string.  
:callback – url called on button click. Its @params hash is :button_id, :button_title, and :button_index.

## show_status

Show status messages. The status window will close after clicking on hide button.

	:::ruby
	show_status(title, status_text, hide_button_label)

<table>
<tr>
	<td>title</td>
	<td>The title on the status message popup window.</td>
</tr>
<tr>
	<td>status_text</td>
	<td>The status message displayed in the popup status window.</td>
</tr>
<tr>
	<td>hide_button_label</td>
	<td>The labe text for the hide button in the popup status window.</td>
</tr>
</table>

## vibrate

Vibrate the device.

Syntax: vibrate(duration_in_milliseconds)

duration_in_milliseconds - vibrate for the number of milliseconds, up to 25500; if 0 or no duration is specified, vibrate for 2500 milliseconds.


