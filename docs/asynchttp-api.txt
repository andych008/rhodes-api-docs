# AsyncHttp API

Asynchronously make calls to http services.

## cancel

Cancel the current AsyncHttp call.

## download_file

Download a file to the specified filename.

	:::ruby
	download_file(:url, :headers, :filename, :callback, :callback_param)

<table border="1">
<tr>
	<td><code>:url</code></td>
	<td>URL of the request.</td>
</tr>
<tr>
	<td><code>:headers</code></td>
	<td>Hash of headers to send with the request.</td>
</tr>
<tr>
	<td><code>:callback</code></td>
	<td>Callback action to execute when the request is done.</td>
</tr>
<tr>
	<td><code>:callback_param</code></td>
	<td>(optional) Parameters to send to the callback. Parameters values should be url encoded with RhoSupport.url_encode. (ZZZ put in link)</td>
</tr>
<tr>
	<td><code>;authentication</code></td>
	<td>(optional) Send Basic Auth header with request.</td>
</tr>
<tr>
	<td><code>:ssl_verify_peer</code></td>
	<td>(optional) Verify SSL certificates. Default = true.</td>
</tr>
</table>

The authentication parameter takes the form:

	:::ruby
	:authentication => {
	  :type => :basic, 
	  :username => "john", 
	  :password => "secret"
	}

## get

Perform an HTTP GET request to the specified URL.

Syntax: get(:url, :headers, :callback, :callback_param)

<table border="1">
<tr>
	<td><code>:url</code></td>
	<td>URL of the request.</td>
</tr>
<tr>
	<td><code>:headers</code></td>
	<td>Hash of headers to send with the request.</td>
</tr>
<tr>
	<td><code>:callback</code></td>
	<td>Callback action to execute when the request is done.</td>
</tr>
<tr>
	<td><code>:callback_param</code></td>
	<td>(optional) Parameters to send to the callback. Parameters values should be url encoded with RhoSupport.url_encode. (ZZZ put in link)</td>
</tr>
<tr>
	<td><code>;authentication</code></td>
	<td>(optional) Send Basic Auth header with request.</td>
</tr>
<tr>
	<td><code>:ssl_verify_peer</code></td>
	<td>(optional) Verify SSL certificates. Default = true.</td>
</tr>
</table>

The authentication parameter takes the form:

	:::ruby
	:authentication => {
	  :type => :basic, 
	  :username => "john", 
	  :password => "secret"
	} 

## post

Perform HTTP POST request to the specified URL.

Syntax: post(:url, :headers, :callback, :callback_param)

<table border="1">
<tr>
	<td><code>:url</code></td>
	<td>URL of the request.</td>
</tr>
<tr>
	<td><code>:headers</code></td>
	<td>Hash of headers to send with the request.</td>
</tr>
<tr>
	<td><code>:callback</code></td>
	<td>Callback action to execute when the request is done.</td>
</tr>
<tr>
	<td><code>:callback_param</code></td>
	<td>(optional) Parameters to send to the callback. Parameters values should be url encoded with RhoSupport.url_encode. (ZZZ put in link)</td>
</tr>
<tr>
	<td><code>;authentication</code></td>
	<td>(optional) Send Basic Auth header with request.</td>
</tr>
<tr>
	<td><code>:ssl_verify_peer</code></td>
	<td>(optional) Verify SSL certificates. Default = true.</td>
</tr>
</table>

The authentication parameter takes the form:

	:::ruby
	:authentication => {
	  :type => :basic, 
	  :username => "john", 
	  :password => "secret"
	}

## upload_file

Upload the specified file using HTTP POST.

Syntax: upload_file(:url, :headers, :filename, :body, :callback, :callback_param)

<table border="1">
<tr>
	<td><code>:url</code></td>
	<td>URL of the request.</td>
</tr>
<tr>
	<td><code>:headers</code></td>
	<td>Hash of headers to send with the request.</td>
</tr>
<tr>
	<td><code>:callback</code></td>
	<td>Callback action to execute when the request is done.</td>
</tr>
<tr>
	<td><code>:callback_param</code></td>
	<td>(optional) Parameters to send to the callback. Parameters values should be url encoded with RhoSupport.url_encode. (ZZZ put in link)</td>
</tr>
<tr>
	<td><code>;authentication</code></td>
	<td>(optional) Send Basic Auth header with request.</td>
</tr>
<tr>
	<td><code>:ssl_verify_peer</code></td>
	<td>(optional) Verify SSL certificates. Default = true.</td>
</tr>
</table>

The authentication parameter takes the form:

	:::ruby
	:authentication => {
	  :type => :basic, 
	  :username => "john", 
	  :password => "secret"
	}

